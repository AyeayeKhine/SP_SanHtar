
<script id="information-user-template" type="text/template">
    <div>
        <br />
        <br />
        <div class="card scb-card">
            <div class="card-header bg-primary">
                <p class="m-0">
                    <i class="fa fa-dribbble"></i> All User Info
                </p>
            </div>
            <div class="card-header scb-card-header font-kanit-light">
                @*<p class="scb-table-name"><label style="margin-bottom: 0px;">Registration User List</label> {{perPage}} <label style="margin-bottom: 0px;" lang="th">Pages</label></p>*@
                <div class="scb-table-count"><p class="scb-table-count-left">Show<input type="text" value="10" class="scb-table-count-input" v-model="perPage">Pages</p></div>
                <div class="input-group scb-table-search">
                    <input type="text" placeholder="Serach UserName" class="form-control" v-model="text_brand">
                    <span class="input-group-append"><button type="button" class="btn success" v-on:click="onFilterSet(text_brand)"><i class="fa fa-search"></i></button></span>
                </div>
            </div>


            <div id="v-Comp-Body">
                <div id="table-wrapper" class="card-body scb-card-body table-responsive">
                    <vuetable ref="vuetable"
                              api-url="@Url.Action("GetAllUser", "Registration")"
                              :fields="fields"
                              :sort-order="sortOrder"
                              :css="css.table"
                              pagination-path=""
                              :append-params="appendParams"
                              :per-page="perPage"
                              v-on:vuetable:loading="onLoading"
                              v-on:vuetable:loaded="onLoaded"
                              v-on:vuetable:pagination-data="onPaginationData">
                        <template slot="actions" scope="props">
                            <div class="table-button-container">
                                <a style="cursor:pointer;padding-right:20px" v-on:click="editRow('edit-item',props.rowData)">
                                    <i class="fa fa-edit text-pink" aria-hidden="true" data-toggle="modal" data-target="#staff-pc-manage-modal">
                                    </i>
                                    Edit
                                </a>
                                <a style="cursor:pointer;padding-right:20px" v-on:click="deleteRow('delete-item',props.rowData)">
                                    <i class="fa fa-remove text-pink" aria-hidden="true" data-toggle="modal" data-target="#staff-pc-manage-modal"></i>
                                    Delete
                                </a>
                                <a style="cursor:pointer" v-on:click="detailRow('detail-item',props.rowData)">
                                    <i class="fa fa-check text-pink" aria-hidden="true" data-toggle="modal" data-target="#staff-pc-manage-modal"></i>
                                    Detail
                                </a>
                            </div>
                        </template>
                    </vuetable>
                </div>
            </div>
            <div id="v-Comp-Footer" style="margin-top: 20px;">
                <div class="vuetable-pagination ui basic grid">
                    <vuetable-pagination ref="pagination"
                                         :css="css.pagination"
                                         v-on:vuetable-pagination:change-page="onChangePage">
                    </vuetable-pagination>
                    <vuetable-pagination-info style="padding-top: 8px;"
                                              ref="paginationInfo"
                                              :css="css.paginationInfo"
                                              :noDataTemplate="paginationNoDataTemplate"
                                              :infoTemplate="paginationInfoTemplate">
                    </vuetable-pagination-info>
                </div>
            </div>
            <div :class="{'modal-backdrop show' : loadingDataTable }"
                 :style="{'position' : (loadingDataTable ? 'absolute': '') ,'right' : (loadingDataTable ? '5px': ''),'left' : (loadingDataTable ? '5px': ''),'cursor' : (loadingDataTable ? 'wait': ''),'z-index' : (loadingDataTable ? '9': '') }">
                <i v-if="loadingDataTable"
                   class="fa fa-refresh fa-spin fa-3x fa-fw"
                   style="color:white;position:absolute;top: 45%;left: 45%;transform: translate(-50%, -50%)"></i>
            </div>
            <v-user-edit v-if="showModalEdit" v-on:close="showModalEdit = false" v-model="editData"></v-user-edit>
            <v-user-delete v-if="showModalDelete" v-on:close="showModalDelete = false" v-model="editData"></v-user-delete>
            <v-user-detail v-if="showModalDetail" v-on:close="showModalDetail = false" v-model="editData"></v-user-detail>
        </div>
    </div>


</script>


<script id="user-edit-template" type="text/template">
    <div id="staff-pc-manage-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" class="modal" style="display: block;">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0 card-header bg-primary" style="margin-top:-17px;margin-left:-2px;margin-right:4px;">
                            <div class="row " style="padding-top: 12px; padding-bottom: 12px">
                                <div class="col-lg-6 col-md-3 col-4">
                                    <h5 class="modal-title">Update User</h5>
                                </div>
                                <div class="col-lg-5 col-md-8 col-7">
                                </div>
                                <div class="col-lg-1 col-md-1 col-1">
                                    <button style="cursor:pointer " class="close" type="button" @*v-on:click="$emit('close')"*@ data-dismiss="modal" aria-label="Close"><span aria-hidden="true">X</span></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-12 py-2 pb-4">
                            <div class="row">

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>UserName :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">
                                            <input v-if="!statusUpdate" class="form-control border-danger" v-model="value.UserName" type="text" />
                                            <label v-if="statusUpdate"> {{value.UserName}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Frist Name :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">
                                            <input v-if="!statusUpdate" class="form-control border-danger" v-model="value.FirstName" type="text" />
                                            <label v-if="statusUpdate"> {{value.FirstName}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Last Name :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">
                                            <input v-if="!statusUpdate" class="form-control border-danger" v-model="value.LastName" type="text" />
                                            <label v-if="statusUpdate"> {{value.LastName}} </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Email :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">
                                            <input v-if="!statusUpdate" class="form-control border-danger" v-model="value.Email" type="text" />
                                            <label v-if="statusUpdate"> {{value.Email}} </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>UserType :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">
                                            <select v-if="!statusUpdate" class="form-control form-control-sm border-rad" v-model="value.UserType">
                                                <option selected disabled>Select</option>
                                                <option value="1">Admin</option>
                                                <option value="2">SuperMember</option>
                                                <option value="3">Member</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Sex :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">
                                            <select v-if="!statusUpdate" class="form-control form-control-sm border-rad" v-model="value.Sex">
                                                <option selected disabled>Select</option>
                                                <option value="1">Female</option>
                                                <option value="2">Male</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Personal Contact Number :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">
                                            <input v-if="!statusUpdate" class="form-control border-danger" v-model="value.PersonalContactNumber" type="text" />
                                            <label v-if="statusUpdate"> {{value.PersonalContactNumber}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Other Contact Number :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">
                                            <input v-if="!statusUpdate" class="form-control border-danger" v-model="value.OtherContactNumber" type="text" />
                                            <label v-if="statusUpdate"> {{value.OtherContactNumber}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Chapter :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">
                                            <select v-model="value.ChemistryID" class="form-control form-control-sm border-rad" v-on:change="onChange($event)" multiple>
                                                <option v-for="role in Chapterdata" :value="role.ID">{{role.Text}}</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style=" margin-top: 25px;">
                                    <div class="col-lg-10 col-md-10 col-12 mx-auto">
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6 col-6">
                                                <button class="btn btn-secondary w-200" style="cursor:pointer" v-on:click="$emit('close')" data-dismiss="modal">Close</button>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-6">
                                                <button class="btn btn-danger w-200" style="cursor:pointer" v-on:click="onClickBrand">Save</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</script>

<script id="user-delete-template" type="text/template">
    <div id="staff-pc-manage-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" class="modal" style="display: block;">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-4">
                                    <h5 class="modal-title">แก้ไขข้อมูล</h5>
                                </div>
                                <div class="col-lg-8 col-md-8 col-7">
                                </div>
                                <div class="col-lg-1 col-md-1 col-1">
                                    <button style="cursor:pointer " class="close" type="button" v-on:click="$emit('close')" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">X</span></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-12 py-2 pb-4">
                            <div class="row">

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">

                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-12  border border-bottom-0 border-top-1 border-left-0 border-right-0" style=" margin-top: 10px;">


                                    <div class="row" style=" margin-top: 25px;">
                                        <div class="col-lg-10 col-md-10 col-12 mx-auto">
                                            <div class="row">
                                                <div class="col-lg-6 col-md-6 col-6">
                                                    <button class="btn btn-secondary w-100" style="cursor:pointer" v-on:click="$emit('close')">Cancle</button>
                                                </div>
                                                <div class="col-lg-6 col-md-6 col-6">
                                                    <button class="btn btn-danger w-100" style="cursor:pointer" v-on:click="onClickBrandDelete">Delete</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>

<script id="user-detail-template" type="text/template">
    <div id="staff-pc-manage-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" class="modal" style="display: block;">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-4">
                                    <h5 class="modal-title">Detail</h5>
                                </div>
                                <div class="col-lg-8 col-md-8 col-7">
                                </div>
                                <div class="col-lg-1 col-md-1 col-1">
                                    <button style="cursor:pointer " class="close" type="button" v-on:click="$emit('close')" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">X</span></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-12 py-2 pb-4">
                            <div class="row">

                                <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label>UserName :</label>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label> {{value.UserName}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label>Frist Name :</label>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label> {{value.FirstName}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label>Last Name :</label>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label> {{value.LastName}} </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label>Email :</label>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label> {{value.Email}} </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label>UserType :</label>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label> {{value.UserType}} </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label>Sex :</label>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label> {{value.Sex}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label>Personal Contact Number :</label>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label> {{value.PersonalContactNumber}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label>Other Contact Number :</label>
                                        </div>
                                        <div class="col-lg-6 col-md-6 col-6">
                                            <label> {{value.OtherContactNumber}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="row" style=" margin-top: 25px;">
                                    <div class="col-lg-10 col-md-10 col-12 mx-auto">
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6 col-6">
                                                <button class="btn btn-secondary w-200" style="cursor:pointer" v-on:click="$emit('close')">Close</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</script>

<script>
    Vue.component('v-information-user', {
        template: "#information-user-template",
        components: {
            'vuetable-pagination': Vuetable.VuetablePagination

        },
        watch: {
            perPage: function (val) {
                var that = this;
                Vue.nextTick(function () { that.$refs.vuetable.refresh() })
            },
            searchFor: function (val) {
                this.onFilterSet(val);
            },
            },
            mounted() {
                this.$on('refresh-badge', () => {
                    this.$refs.vuetable.refresh()
                });
                this.$nextTick(() => {
                    this.$refs.vuetable.normalizeFields();
                });
            },
        data() {

            return {
                loadingDataTable: false,
                editData:
                {
                    ID: '',
                    UserName: '',
                    FirstName: '',
                    LastName: '',
                    Email: '',
                    UserType: '',
                    Sex: '',
                    PersonalContactNumber: '',
                    OtherContactNumber: '',
                    //Chapterdata=[],

                },
                text_brand: "",
                showModalEdit: false,
                showModalAdd: false,
                showModalDelete: false,
                showModalDetail: false,
                fileName: undefined,
                multiSort: true,
                searchFor: null,
                perPage: 10,
                paginationInfoTemplate: 'page {from} of {to} pages ({total}) items',
                paginationNoDataTemplate: 'NoData',
                appendParams: {},
                role11:[1,3],
                fields: tableColumns,
                chapterId: 0,
                Chapterdata: [],
                sortOrder: [{
                    field: 'UserID',
                    direction: 'asc'
                }],
                css: {
                    table: {
                        tableClass: 'table-responsive w-100 d-block d-md-table table-bordered table table-striped rounded-top',
                        theadClass: 'table-bordered table table-striped rounded-top',
                        loadingClass: 'fa fa-spinner fa-pulse fa-3x fa-fw',
                        ascendingIcon: 'fa fa-chevron-circle-up',
                        descendingIcon: 'fa fa-chevron-circle-down',
                        handleIcon: 'fa fa-bars',
                    },
                    pagination: {
                        infoClass: 'pull-left',
                        wrapperClass: 'vuetable-pagination pull-right',
                        activeClass: 'btn-danger color-white',
                        disabledClass: 'Enabled',
                        pageClass: 'btn btn-border cursor-pointer',
                        linkClass: 'btn btn-border cursor-pointer',
                        icons: {
                            first: 'fa fa-angle-double-left fa-lg',
                            prev: 'fa fa-chevron-circle-left fa-lg',
                            next: 'fa fa-chevron-circle-right fa-lg',
                            last: 'fa fa-angle-double-right fa-lg',
                        },
                        paginationInfo: {
                            infoClass: 'pull-left',
                            wrapperClass: 'vuetable-pagination pull-right',
                            activeClass: 'btn-danger color-white',
                        },
                    }
                }
            }
        },
          computed: {
            /*httpOptions(){
              return {headers: {'Authorization': "my-token"}} //table props -> :http-options="httpOptions"
            },*/
        },
          methods: {

          selectedRow() {
                  this.onRefresh();
              var temp1 = this.$refs.vuetable.selectedTo;
             // alert(temp1)
          },

          listMenuRole2: function (role, roleUser) {
              var reject = false;
              for (var i = 0; i < role.length; i++) {
                  if (role[i] == roleUser) reject = true;
              }
              return reject;
              },

            onLoading() {
                this.loadingDataTable = true;
            },
            onLoaded() {
                this.loadingDataTable = false;
            },
            onFilterSet(filterText) {
                var that = this;
                that.appendParams.filter = filterText;
                Vue.nextTick(function () { that.$refs.vuetable.refresh() })
            },
            onRefresh() {
                var that = this;
                    that.$refs.vuetable.refresh()

            },
            loadedData() {
                this.$refs.vuetable.selectedTo[1] //mark 1 as checked
                //alert("checkselect")
            },
            onFilterReset() {
                var that = this;
                that.text_brand = null
                delete that.appendParams.filter
                Vue.nextTick(function () { that.$refs.vuetable.refresh() })
            },
            onPaginationData(paginationData) {

                this.$refs.pagination.setPaginationData(paginationData)
                this.$refs.paginationInfo.setPaginationData(paginationData)
            },
            onChangePage(page) {

                this.$refs.vuetable.changePage(page)
            },
            //update
              editRow(action, rowData) {

                  if (action == 'edit-item') {

                      //this.editData.ID = rowData.ID;
                      //this.editData.UserName = rowData.UserName;
                      //this.editData.FirstName = rowData.FirstName;
                      //this.editData.LastName = rowData.LastName;
                      //this.editData.Email = rowData.Email;
                      //this.editData.Sex = rowData.Sex;
                      //this.editData.UserType = rowData.UserType;
                      //this.editData.PersonalContactNumber = rowData.PersonalContactNumber;
                      //this.editData.OtherContactNumber = rowData.OtherContactNumber;
                      //this.editData.ChemistryID = rowData.ChemistryID;
                      ////this.editData.Chapterdata= this.Chapterdata;
                      //this.showModalEdit = true;
                      var win = window.open('/Registration/CustomIndex?id=' + rowData.ID + '&UpdateStatus=' + false, '_blank');
                      if (win) {
                          //Browser has allowed it to be opened
                          win.focus();
                      }

                  }
                  else {
                      this.editData.ID = rowData.ID;
                      this.showModalDelete = true;

                  }

              },
              detailRow(action, rowData) {

                  //this.editData.ID = rowData.ID;
                  //this.editData.UserName = rowData.UserName;
                  //this.editData.FirstName = rowData.FirstName;
                  //this.editData.LastName = rowData.LastName;
                  //this.editData.Email = rowData.Email;
                  //this.editData.Sex = sexType[rowData.Sex];
                  //this.editData.UserType = userType[rowData.UserType];
                  //this.editData.PersonalContactNumber = rowData.PersonalContactNumber;
                  //this.editData.OtherContactNumber = rowData.OtherContactNumber;
                  //this.showModalDetail = true;
                  var win = window.open('/Registration/CustomIndex?id=' + rowData.ID + '&UpdateStatus=' + true, '_blank');
                  if (win) {
                      //Browser has allowed it to be opened
                      win.focus();
                  }

              },
              deleteRow(action, rowData) {
                  window.alert("Are you sure delete?")
                  var temp = { ID: rowData.ID }
                  $.ajax({
                      type: 'POST',
                      url: '/Registration/DeleteUser?receive=' + JSON.stringify(temp),
                      processData: false,
                      contentType: false,
                      cache: false,
                      enctype: 'multipart/form-data',
                      success: data => {
                          if (data.status == 2) {
                              this.$refs.vuetable.refresh()
                          } else {
                              alert(data.message)
                          }

                      },
                      error: function (err) {
                          alert(err.message)
                          console.log(err);
                      }
                  });
              },
            addbrand () {
                this.showModalAdd = true;
            },
            getSex: function (value) {
                  return sexType[value]

            },
            getuserType: function (value) {
                return userType[value];
            }

        },
        mounted() {
            $.ajax({
                url: "/Chemistry/GetChemistryDropdown",
                success: codes => this.Chapterdata = codes,
                error: err => console.log(err)
            })
        }
        });

    var tableColumns = [
                {
                    name: 'id',
                    title: ' id',
            sortField: 'id',
                    visible:false
        }, {
            name: 'UserName',
            title: 'UserName',
            sortField: 'UserName'
        }
                , {
                    name: 'FirstName',
                    title: 'First Name',
                    sortField: 'FirstName'
                },
                {
                    name: 'LastName',
                    title: 'Last Name',
                    sortField: 'LastName'
                },
                {
                    name: 'Email',
                    title: 'Email',
                    sortField: 'Email'
                },
                {
                    name: 'UserType',
                    title: 'Usertype',
                    sortField: 'UserType',
                    callback: 'getuserType'
        },
        {
            name: 'Sex',
            title: 'Sex',
            sortField: 'Sex',
            callback: 'getSex'
        },
        {
            name: 'PersonalContactNumber',
            title: 'Personal contactnumber',
            sortField: 'PersonalContactNumber'
        },
        {
            name: 'OtherContactNumber',
            title: 'Other contactnumber',
            sortField: 'OtherContactNumber'
        },
                {
                    name: '__slot:actions',
                    title: 'actions'

                }
    ]

    var userType = ['', 'Admin', 'SuperMember', 'Member']
    var sexType = ['', 'Female', 'Male']

       Vue.component('v-user-edit', {
        template: "#user-edit-template",
        props:
        {
            value: { text: null }
        },
        data()
        {
            return {
                statusUpdate: false,
                statusResult: false,
                statusReject: 1,
                checkedNames: [],
                selected_role:''
            }
        },
        methods: {
            //update
            onClickBrand: function () {
                this.statusUpdate = true;
                this.statusResult = false;
                var that = this;
                var temp =
                {
                        ProductId: that.value.editid,
                        ProductName: that.value.edit_ProductName,
                        Price: that.value.edit_Price,
                        Item1: that.value.edit_Item1,
                        Amount: that.value.edit_Amount,

                    }

                that.$http.put('@Url.Action("cpmUpdateProduct", "Product")', { receive: JSON.stringify(temp) })
                    .then(response => {

                   switch (response.body.status)
                    {
                       case "1":
                           that.$parent.onRefresh();
                           this.$parent.showModalEdit = false;
                            break;
                        }
                    that.statusReject = response.body.status;
                    that.statusResult = true;
                    that.statusUpdate = true;

                    }, response => {
                        alert("error"+response.body);
                        that.statusResult = true;
                        that.statusUpdate = false;
                        that.statusReject = "3";
                });
            }
           },
           mounted() {
               $.ajax({
                   url: "/Chemistry/GetChemistryDropdown",
                   success: codes => this.Chapterdata = codes,
                   error: err => console.log(err)
               })
           }
            });
       Vue.component('v-user-delete', {
                template: "#user-delete-template",
        props:
        {
            value: { text: null }
        },
        data()
        {
            return {
                statusUpdate: false,
                statusResult: false,
                statusReject: 1,
            }
        },
        methods: {
            onClickBrandDelete: function () {
                this.statusUpdate = true;
                this.statusResult = false;
                var that = this;
                var temp =
                {
                        ID: that.value.ID,

                    }

                that.$http.post('@Url.Action("cpmDeleteProduct", "Product")', { receive: JSON.stringify(temp) })
                    .then(response => {

                   switch (response.body.status)
                    {
                       case "1":

                           this.$parent.showModalDelete = false;
                           that.$parent.onRefresh();
                            break;
                        }
                    that.statusReject = response.body.status;
                    that.statusResult = true;
                    that.statusUpdate = false;

                    }, response => {
                        alert("error"+response.body);
                        that.statusResult = true;
                        that.statusUpdate = false;
                        that.statusReject = "3";
                });
            },

        }
       });


       Vue.component('v-user-detail', {
        template: "#user-detail-template",
        props:
        {
            value: { text: null }
        },
        data()
        {
            return {
            }
        },
        methods: {

        }
            });
       Vue.use(Vuetable);
</script>