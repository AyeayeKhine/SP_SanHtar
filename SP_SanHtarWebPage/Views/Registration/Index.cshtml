
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Main.cshtml";
}

<div id="CreateRegister">
    <div class="container py-3">
        <div class="assessment-table-container mt-2">
            <div class="card shadow-box">
                <div class="card-header bg-primary">
                    <div class="row">
                        <div class="col-lg-7 col-md-7 col-12 px-0 pl-3">
                            <h5 class="text-white mb-0">User Registration Form</h5>
                        </div>

                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="col-lg-12 col-md-12 col-12 px-0">
                        <tab></tab>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<script type="text/x-template" id="tab-template">

    <div>
        <div class="col-lg-12 col-md-12 col-12 mt-2 d-md-none d-inline-block">
            <div class="col-lg-12 col-md-12 col-12 bg-warning text-right px-1 py-2">
                <button class="btn btn-warning" aria-hidden="true" data-toggle="collapse" href="#tabcollapse" role="button" aria-expanded="false" aria-controls="tabcollapse"><i class="fa fa-align-right text-white px-1"></i></button>
            </div>
        </div>
        <div class="col-lg-12 col-md-12 col-12">
            <div class="collapse w-100" id="tabcollapse" v-for="item in arrTab">
                <div class="col-lg-12 col-md-12 col-12" style="cursor:pointer;" v-on:click="active('item.text')" v-bind:class="{'bg-primary' : $root.tab == item.text,'bg-warning' : $root.tab != item.text}">
                    <p class="m-0 py-2">{{item.text}}</p>
                </div>
            </div>
            <div class="col-lg-12 col-md-12 col-12 px-0 d-md-block d-none mt-2">
                <div class="pn-ProductNav_Wrapper">
                    <nav class="pn-ProductNav" id="pnProductNav">
                        <div class="pn-ProductNav_Contents" id="pnProductNavContents" style="display: inline-flex;" v-for="item in arrTab">
                            <div class="tab-top mr-1 text-center pt-3 px-3 pb-0" style="cursor:pointer;" v-on:click="active(item.text)" v-bind:class="{'bg-primary' : $root.tab == item.text,'bg-warning' : $root.tab != item.text}">
                                <p class="m-0 mt-2">{{item.text}}</p>
                            </div>
                        </div>
                    </nav>
                    <button class="pn-Advancer pn-Advancer_Left d-md-block d-none" id="pnAdvancerLeft" type="button">
                        <div class="tab-left"><i class="fa fa-caret-left" aria-hidden="true"></i></div>
                    </button>
                    <button class="pn-Advancer pn-Advancer_Right d-md-block d-none" id="pnAdvancerRight" type="button">
                        <div class="tab-right"><i class="fa fa-caret-right" aria-hidden="true"></i></div>
                    </button>
                    <div class="col-lg-12 col-md-12 col-12 px-0 mt-md-0 mt-2">
                        <v-add-user v-show="$root.tab == 'AddUser'"></v-add-user>
                        <v-information-user v-show="$root.tab == 'ShowAllUser'"></v-information-user>
                        <v-recover-user v-show="$root.tab == 'ShowRecoverUser'"></v-recover-user>
                    </div>
                </div>
            </div>
        </div>
    </div>

</script>

@Html.Partial("~/Views/Registration/Tabs/AddUser.cshtml")
@Html.Partial("~/Views/Registration/Tabs/ShowUser.cshtml")
@Html.Partial("~/Views/Registration/Tabs/ShowRecoverUser.cshtml")
<script>

    Vue.component('tab', {
        template: '#tab-template',
        data: function () {
            return {
                price: [],
                realprice: [],
                arrTab: [
                    {

                        text: "AddUser",
                        no: "1",
                        role: [1, 3, 4]
                    },
                    {

                        text: "ShowAllUser",
                        no: "2",
                        role: [1, 2, 3]
                    },
                    {

                        text: "ShowRecoverUser",
                        no: "3",
                        role: [1, 2, 3]
                    },


                    //{

                    //    text: "ShowProductPIEChart",
                    //    no: "3",
                    //    role: [1, 2]
                    //}
                ]
                ,
                processActive: this.$root.processActive,
                tab: this.$root.tab,
            }
        },
        methods: {
            active: function (n) {
                //$.ajax({
                //    url: "/Product/GetPriceforProduct",
                //    success: codes => this.price = codes,
                //    error: err => console.log(err)
                //})
                // this.$children[2].resetdata();
                //this.$children[2].refreshchart();
                //this.$children[2].updatedata(this.price);
                if (n == "ShowAllUser") {
                    this.$children[1].onRefresh();
                } else if (n == "ShowRecoverUser") {
                    this.$children[2].onRefresh();
                }
                //if (n == "ShowProductPIEChart") {
                //    this.realprice = [];
                //    $.ajax({
                //        url: "/Product/GetPriceforProduct",
                //        success: codes => this.price = codes,
                //        error: err => console.log(err)

                //    })
                //    //for (var ip = 0; ip < this.price.length
                //    //    ; ip++) {
                //    //    this.realprice.push(this.price[ip])

                //    //}
                //    //this.$children[2].resetdata();
                //    this.$children[2].updatedata(this.price);
                //    this.$children[2].refreshchart(this.price);
                //    // alert("GetPrice" + JSON.stringify(this.realprice))
                //}
                this.$parent.tab = n
            },

            listMenuRole: function (roleMenu, roleUser) {
                var reject = false;
                for (var i = 0; i < roleMenu.length; i++) {
                    if (roleMenu[i] == roleUser) reject = true;
                }
                return reject;
            }
        },
        mounted() {
            this.realprice = [];
            //$.ajax({
            //    url: "/Product/GetPriceforProduct",
            //    success: codes => this.price = codes,
            //    error: err => console.log(err)
            //})
            //this.$children[2].refreshchart(this.price);
            //this.$children[2].refreshchart(this.price);
            //// this.realprice = ['43', '4'];
            //alert("GetPrice" + JSON.stringify(this.realprice))
        }
    });

    new Vue({
        el: "#CreateRegister",
        data() {
            return {
                tab: 'AddUser'
            }
        },
        methods:
        {

        }
    })
</script>

