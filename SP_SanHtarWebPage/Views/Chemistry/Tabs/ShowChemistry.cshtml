
<script id="information-chemistry-template" type="text/template">
    <div>
        <br />
        <br />
        <div class="card scb-card">
            <div class="card-header bg-primary">
                <p class="m-0">
                    <i class="fa fa-dribbble"></i> All User Info
                </p>
            </div>
            <div class="card-header scb-card-header font-kanit-light">
                <p class="scb-table-name"><label style="margin-bottom: 0px;">Registration User List</label> {{perPage}} <label style="margin-bottom: 0px;" lang="th">Pages</label></p>
                <div class="scb-table-count"><p class="scb-table-count-left">Show<input type="text" value="10" class="scb-table-count-input" v-model="perPage">Pages</p></div>
                <div class="input-group scb-table-search">
                    <input type="text" placeholder="Serach" class="form-control" v-model="text_brand">
                    <span class="input-group-append"><button type="button" class="btn" v-on:click="onFilterSet(text_brand)"><i class="fa fa-search"></i></button></span>
                </div>
            </div>

            <div id="table-wrapper" class="card-body scb-card-body table-responsive">
                <vuetable ref="vuetable"
                          api-url="@Url.Action("GetAllUser", "Registration")"
                          :fields="fields"
                          :sort-order="sortOrder"
                          track-by="ID"
                          :css="css.table"
                          pagination-path=""
                          :append-params="appendParams"
                          :per-page="perPage"
                          v-on:vuetable:loading="onLoading"
                          v-on:vuetable:loaded="onLoaded"
                          v-on:vuetable:pagination-data="onPaginationData">
                    <template slot="actions" scope="props">
                        <div class="table-button-container">
                            <a style="cursor:pointer" v-on:click="editRow('edit-item',props.rowData)">
                                <i class="fa fa-pencil text-pink" aria-hidden="true" data-toggle="modal" data-target="#staff-pc-manage-modal"></i>
                                edit
                            </a>
                            <a style="cursor:pointer" v-on:click="editRow('delete-item',props.rowData)">
                                <i class="fa fa-pencil text-pink" aria-hidden="true" data-toggle="modal" data-target="#staff-pc-manage-modal"></i>
                                delete
                            </a>
                            <a style="cursor:pointer" v-on:click="detailRow('detail-item',props.rowData)">
                                <i class="fa fa-pencil text-pink" aria-hidden="true" data-toggle="modal" data-target="#staff-pc-manage-modal"></i>
                                detail
                            </a>
                        </div>
                    </template>
                </vuetable>
            </div>

            <div id="v-Comp-Footer" style="margin-top: 50px; margin-left: 50px;">
                <div class="row">
                    <div class="vuetable-pagination ui basic grid">
                        <vuetable-pagination ref="pagination"
                                             :css="css.pagination"
                                             v-on:vuetable-pagination:change-page="onChangePage">
                        </vuetable-pagination>
                    </div>
                </div>

            </div>
            <div class="fade "
                 :class="{'modal-backdrop show' : loadingDataTable }"
                 :style="{'position' : (loadingDataTable ? 'absolute': '') ,'right' : (loadingDataTable ? '5px': ''),'left' : (loadingDataTable ? '5px': ''),'cursor' : (loadingDataTable ? 'wait': ''),'z-index' : (loadingDataTable ? '9': '') }">
                <i v-if="loadingDataTable"
                   class="fa fa-refresh fa-spin fa-3x fa-fw"
                   style="color:white;position:absolute;top: 45%;left: 45%;transform: translate(-50%, -50%)"></i>
            </div>
            <v-porduct-edit v-if="showModalEdit" v-on:close="showModalEdit = false" v-model="editData"></v-porduct-edit>
            <v-porduct-delete v-if="showModalDelete" v-on:close="showModalDelete = false" v-model="editData"></v-porduct-delete>
            <v-porduct-detail v-if="showModalDetail" v-on:close="showModalDetail = false" v-model="editData"></v-porduct-detail>
        </div>
    </div>


</script>


<script id="porduct-edit-template" type="text/template">
    <div id="staff-pc-manage-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" class="modal" style="display: block;">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-4">
                                    <h5 class="modal-title">แก้ไขข้อมูล</h5>
                                </div>
                                <div class="col-lg-8 col-md-8 col-7">
                                </div>
                                <div class="col-lg-1 col-md-1 col-1">
                                    <button style="cursor:pointer " class="close" type="button" v-on:click="$emit('close')" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">X</span></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-12 py-2 pb-4">
                            <div class="row">

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Product Name :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">
                                            <input v-if="!statusUpdate" class="form-control border-danger" v-model="value.edit_ProductName" type="text" />
                                            <label v-if="statusUpdate"> {{value.edit_ProductName}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Price :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">
                                            <input v-if="!statusUpdate" class="form-control border-danger" v-model="value.edit_Price" type="text" />
                                            <label v-if="statusUpdate"> {{value.edit_Price}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Item :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">
                                            <input v-if="!statusUpdate" class="form-control border-danger" v-model="value.edit_Item1" type="text" />
                                            <label v-if="statusUpdate"> {{value.edit_Item1}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Amount :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">
                                            <input v-if="!statusUpdate" class="form-control border-danger" v-model="value.edit_Amount" type="text" />
                                            <label v-if="statusUpdate"> {{value.edit_Amount}} </label>
                                        </div>
                                    </div>
                                </div>


                                <div class="row" style=" margin-top: 25px;">
                                    <div class="col-lg-10 col-md-10 col-12 mx-auto">
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6 col-6">
                                                <button class="btn btn-secondary w-100" style="cursor:pointer" v-on:click="$emit('close')">ยกเลิก</button>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-6">
                                                <button class="btn btn-danger w-100" style="cursor:pointer" v-on:click="onClickBrand">บันทึก</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</script>

<script id="porduct-delete-template" type="text/template">
    <div id="staff-pc-manage-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" class="modal" style="display: block;">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-4">
                                    <h5 class="modal-title">แก้ไขข้อมูล</h5>
                                </div>
                                <div class="col-lg-8 col-md-8 col-7">
                                </div>
                                <div class="col-lg-1 col-md-1 col-1">
                                    <button style="cursor:pointer " class="close" type="button" v-on:click="$emit('close')" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">X</span></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-12 py-2 pb-4">
                            <div class="row">

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">

                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-12  border border-bottom-0 border-top-1 border-left-0 border-right-0" style=" margin-top: 10px;">


                                    <div class="row" style=" margin-top: 25px;">
                                        <div class="col-lg-10 col-md-10 col-12 mx-auto">
                                            <div class="row">
                                                <div class="col-lg-6 col-md-6 col-6">
                                                    <button class="btn btn-secondary w-100" style="cursor:pointer" v-on:click="$emit('close')">Cancle</button>
                                                </div>
                                                <div class="col-lg-6 col-md-6 col-6">
                                                    <button class="btn btn-danger w-100" style="cursor:pointer" v-on:click="onClickBrandDelete">Delete</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>

<script id="porduct-detail-template" type="text/template">
    <div id="staff-pc-manage-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" class="modal" style="display: block;">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-12 col-md-12 col-12 py-2 border border-bottom-1 border-top-0 border-left-0 border-right-0">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-4">
                                    <h5 class="modal-title">แก้ไขข้อมูล</h5>
                                </div>
                                <div class="col-lg-8 col-md-8 col-7">
                                </div>
                                <div class="col-lg-1 col-md-1 col-1">
                                    <button style="cursor:pointer " class="close" type="button" v-on:click="$emit('close')" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">X</span></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-12 py-2 pb-4">
                            <div class="row">

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Product Name :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">

                                            <label> {{value.edit_ProductName}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Price :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">

                                            <label> {{value.edit_Price}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Item :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">

                                            <label> {{value.edit_Item1}} </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 py-1" style=" margin-top: 10px;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-4">
                                            <label>Amount :</label>
                                        </div>
                                        <div class="col-lg-8 col-md-8 col-8">

                                            <label> {{value.edit_Amount}} </label>
                                        </div>
                                    </div>
                                </div>


                                <div class="row" style=" margin-top: 25px;">
                                    <div class="col-lg-10 col-md-10 col-12 mx-auto">
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6 col-6">
                                                <button class="btn btn-secondary w-100" style="cursor:pointer" v-on:click="$emit('close')">ยกเลิก</button>
                                            </div>
                                            @*<div class="col-lg-6 col-md-6 col-6">
                                                    <button class="btn btn-danger w-100" style="cursor:pointer" v-on:click="onClickBrand">บันทึก</button>
                                                </div>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</script>

<script>
    Vue.component('v-information-chemistry', {
        template: "#information-chemistry-template",
        components: {
            'vuetable-pagination': Vuetable.VuetablePagination

        },
        watch: {
            perPage: function (val) {
                var that = this;
                Vue.nextTick(function () { that.$refs.vuetable.refresh() })
            },
            searchFor: function (val) {
                this.onFilterSet(val);
            },
            },
            mounted() {
                this.$on('refresh-badge', () => {
                    this.$refs.vuetable.refresh()
                });
                this.$nextTick(() => {
                    this.$refs.vuetable.normalizeFields();
                });
            },
        data() {

            return {
                loadingDataTable: false,
                editData:
                {
                    editid: '',
                    edit_ProductName: '',
                    edit_Price: '',
                    edit_Item1: '',
                    edit_Amount: '',

                },
                text_brand: "",
                showModalEdit: false,
                showModalAdd: false,
                showModalDelete: false,
                showModalDetail: false,
                fileName: undefined,
                multiSort: true,
                searchFor: null,
                perPage: 10,
                paginationInfoTemplate: 'แสดง {from} ถึง {to} จากทั้งหมด {total} รายการ',
                paginationNoDataTemplate: 'ไม่มีข้อมูลที่เกี่ยวข้อง',
                appendParams: {},
                role11:[1,3],
                fields: tableColumns,

                sortOrder: [{
                    field: 'ID',
                    direction: 'asc'
                }],
                css: {
                    table: {
                        tableClass: 'table-responsive w-100 d-block d-md-table table-bordered table table-striped rounded-top',
                        theadClass: 'table-bordered table table-striped rounded-top',
                        loadingClass: 'fa fa-spinner fa-pulse fa-3x fa-fw',
                        ascendingIcon: 'fa fa-chevron-circle-up',
                        descendingIcon: 'fa fa-chevron-circle-down',
                        handleIcon: 'fa fa-bars',
                    },
                    pagination: {
                        infoClass: 'pull-left',
                        wrapperClass: 'vuetable-pagination pull-right',
                        activeClass: 'btn-danger color-white',
                        disabledClass: 'Enabled',
                        pageClass: 'btn btn-border cursor-pointer',
                        linkClass: 'btn btn-border cursor-pointer',
                        icons: {
                            first: 'fa fa-angle-double-left fa-lg',
                            prev: 'fa fa-chevron-circle-left fa-lg',
                            next: 'fa fa-chevron-circle-right fa-lg',
                            last: 'fa fa-angle-double-right fa-lg',
                        },
                        paginationInfo: {
                        },
                    }
                }
            }
        },
          computed: {
            /*httpOptions(){
              return {headers: {'Authorization': "my-token"}} //table props -> :http-options="httpOptions"
            },*/
        },
          methods: {

              selectedRow() {
                  this.onRefresh();
              var temp1 = this.$refs.vuetable.selectedTo;
             // alert(temp1)
          },

          listMenuRole2: function (role, roleUser) {
              var reject = false;
              for (var i = 0; i < role.length; i++) {
                  if (role[i] == roleUser) reject = true;
              }
              return reject;
              },

            onLoading() {
                this.loadingDataTable = true;
            },
            onLoaded() {
                this.loadingDataTable = false;
            },
            onFilterSet(filterText) {
                var that = this;
                that.appendParams.filter = filterText;
                Vue.nextTick(function () { that.$refs.vuetable.refresh() })
            },
            onRefresh() {
                var that = this;
                    that.$refs.vuetable.refresh()

            },
            loadedData() {
                this.$refs.vuetable.selectedTo[1] //mark 1 as checked
                //alert("checkselect")
            },
            onFilterReset() {
                var that = this;
                that.text_brand = null
                delete that.appendParams.filter
                Vue.nextTick(function () { that.$refs.vuetable.refresh() })
            },
            onPaginationData(paginationData) {

                this.$refs.pagination.setPaginationData(paginationData)
                this.$refs.paginationInfo.setPaginationData(paginationData)
            },
            onChangePage(page) {

                this.$refs.vuetable.changePage(page)
            },
            //update
            editRow(action,rowData) {

                if (action == 'edit-item') {

                    this.editData.editid = rowData.ProuductId;
                    this.editData.edit_ProductName = rowData.ProductName;
                    this.editData.edit_Price = rowData.Price;
                    this.editData.edit_Item1 = rowData.Item1;
                    this.editData.edit_Amount = rowData.Amount;
                    this.showModalEdit = true;

                }
                else {
                    this.editData.editid = rowData.ProuductId;

                    this.showModalDelete = true;

                }

            },
            detailRow(action, rowData) {
                alert("detail")
                this.editData.editid = rowData.ProuductId;
                this.editData.edit_ProductName = rowData.ProductName;
                this.editData.edit_Price = rowData.Price;
                this.editData.edit_Item1 = rowData.Item1;
                this.editData.edit_Amount = rowData.Amount;
                this.showModalDetail = true;

            }
            ,
            addbrand () {
                this.showModalAdd = true;
            },
            getSex: function (value) {
                if (value === true) {
                    return 'Female'
                } else {
                    return 'Male';
                }

            },
            getuserType: function (value) {
                return userType[value];
            }

        }
        });

    var tableColumns = [
                {
                    name: 'id',
                    title: ' id',
                    sortfield: 'id',
                    visible:false
                }
                , {
                    name: 'FirstName',
                    title: 'First Name',
                    sortfield: 'FirstName'
                },
                {
                    name: 'LastName',
                    title: 'Last Name',
                    sortfield: 'LastName'
                },
                {
                    name: 'Email',
                    title: 'email',
                    sortfield: 'email'
                },
                {
                    name: 'UserType',
                    title: 'Usertype',
                    sortfield: 'UserType',
                    callback: 'getuserType'
        },
        {
            name: 'Sex',
            title: 'Sex',
            sortfield: 'Sex',
            callback: 'getSex'
        },
        {
            name: 'PersonalContactNumber',
            title: 'personal contactnumber',
            sortfield: 'PersonalContactNumber'
        },
        {
            name: 'OtherContactNumber',
            title: 'Other contactnumber',
            sortfield: 'OtherContactNumber'
        },
                {
                    name: '__slot:actions',
                    title: 'actions'

                }
    ]
    var userType = ['Admin', 'SuperMember','Member']

       Vue.component('v-porduct-edit', {
        template: "#porduct-edit-template",
        props:
        {
            value: { text: null }
        },
        data()
        {
            return {
                statusUpdate: false,
                statusResult: false,
                statusReject: 1,
                checkedNames: [],
                selected_role:''
            }
        },
        methods: {
            //update
            onClickBrand: function () {
                this.statusUpdate = true;
                this.statusResult = false;
                var that = this;
                var temp =
                {
                        ProductId: that.value.editid,
                        ProductName: that.value.edit_ProductName,
                        Price: that.value.edit_Price,
                        Item1: that.value.edit_Item1,
                        Amount: that.value.edit_Amount,

                    }

                that.$http.put('@Url.Action("cpmUpdateProduct", "Product")', { receive: JSON.stringify(temp) })
                    .then(response => {

                   switch (response.body.status)
                    {
                       case "1":
                           that.$parent.onRefresh();
                           this.$parent.showModalEdit = false;
                            break;
                        }
                    that.statusReject = response.body.status;
                    that.statusResult = true;
                    that.statusUpdate = true;

                    }, response => {
                        alert("error"+response.body);
                        that.statusResult = true;
                        that.statusUpdate = false;
                        that.statusReject = "3";
                });
            }
        }
            });
            Vue.component('v-porduct-delete', {
                template: "#porduct-delete-template",
        props:
        {
            value: { text: null }
        },
        data()
        {
            return {
                statusUpdate: false,
                statusResult: false,
                statusReject: 1,
            }
        },
        methods: {
            onClickBrandDelete: function () {
                this.statusUpdate = true;
                this.statusResult = false;
                var that = this;
                var temp =
                {
                        ProductId: that.value.editid,

                    }

                that.$http.post('@Url.Action("cpmDeleteProduct", "Product")', { receive: JSON.stringify(temp) })
                    .then(response => {

                   switch (response.body.status)
                    {
                       case "1":

                           this.$parent.showModalDelete = false;
                           that.$parent.onRefresh();
                            break;
                        }
                    that.statusReject = response.body.status;
                    that.statusResult = true;
                    that.statusUpdate = false;

                    }, response => {
                        alert("error"+response.body);
                        that.statusResult = true;
                        that.statusUpdate = false;
                        that.statusReject = "3";
                });
            },

        }
       });


       Vue.component('v-porduct-detail', {
        template: "#porduct-detail-template",
        props:
        {
            value: { text: null }
        },
        data()
        {
            return {
                //statusUpdate: false,
                //statusResult: false,
                //statusReject: 1,
                //checkedNames: [],
                //selected_role:''
            }
        },
        methods: {

        }
            });
        Vue.use(Vuetable);
</script>